---

- name: Ensure facts can be stored locally
  file:
    path: /etc/ansible/facts.d
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - common

- name: assert current platform
  assert:
    that:
      - ansible_os_family == 'RedHat'
      - ansible_distribution_major_version == "7"

- name: Install packages
  when: server.install|bool
  become: true
  package:
    name: "{{ item }}"
    state: present
  retries: 3
  with_items: "{{ server.packages }}"
  tags:
    - common

- name: check presence of portmapper
  stat:
    path: /var/run/rpcbind.sock
  register: portmapper

- name: stop portmapper
  systemd:
    name: rpcbind.socket
    state: stopped
    enabled: false
    masked: true
  ignore_errors: true
  when:
    - portmapper.stat.exists

- name: disable portmapper
  systemd:
    name: rpcbind.service
    state: stopped
    enabled: false
  ignore_errors: true

- name: check presence of postfix
  stat:
    path: /etc/postfix/main.cf
  register: postfix

- name: configure mail transfer agent for local-only mode
  when:
    - postfix.stat.exists
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: '^inet_interfaces'
    line: 'inet_interfaces = localhost'
    state: present
  notify: restart postfix

- name: configure mail transfer agent for mydomain
  when:
    - postfix.stat.exists
    - mydomain is defined
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: '^mydomain ='
    line: 'mydomain = {{ mydomain }}'
    state: present
  notify: restart postfix

- name: configure mail transfer agent for mydomain.mydomain
  when:
    - postfix.stat.exists
    - mydomain is defined
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: '^myhostname ='
    line: 'myhostname = {{ inventory_hostname }}.{{ mydomain }}'
    state: present
  ignore_errors: true
  notify: restart postfix

- name: configure mail transfer agent for smtp
  when:
    - postfix.stat.exists
    - mydomain is defined
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: '^myorigin = '
    line: 'myorigin = $mydomain'
    state: present
  ignore_errors: true
  notify: restart postfix

- name: do not disclose software version in SMTP banner
  when:
    - postfix.stat.exists
  lineinfile:
    path: /etc/postfix/main.cf
    regexp: 'smtpd_banner'
    line: 'smtpd_banner = $myhostname ESMTP'
    state: present
  notify: restart postfix

- name: configure mail transfer agent for ipv4 only
  when:
    - postfix.stat.exists
  lineinfile:
    dest: /etc/postfix/main.cf
    regexp: '^inet_protocols'
    line: 'inet_protocols = ipv4'
    state: present
  ignore_errors: true
  notify: restart postfix

- name: remove rsh trust files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/hosts.equiv
    - /root/hosts.equiv

- name: manage kernel modules
  copy:
    src: modprobe.conf
    dest: /etc/modprobe.d/CIS.conf
    owner: root
    group: root

- name: check presence of sysconfig network file
  stat:
    path: /etc/sysconfig/network
  register: sysconfig

- name: disable zeroconf networking
  when: sysconfig.stat.exists
  lineinfile:
    dest: /etc/sysconfig/network
    regexp: '^NOZEROCONF'
    line: 'NOZEROCONF=yes'
    state: present

- name: check presence of dmesg logfile
  stat:
    path: /var/log/dmesg
  register: dmesg_logfile

- name: restrict permissions on dmesg logfile
  when: dmesg_logfile.stat.exists
  file:
    path: /var/log/dmesg
    mode: 0640

- name: check presence of sshd_config file
  stat:
    path: /etc/ssh/sshd_config
  register: sshd_config

- name: SSH server configuration
  when: sshd_config.stat.exists
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
  with_items:
    - regexp: '^(#)?HostbasedAuthentication'
      line: "HostbasedAuthentication no"
    - regexp: '^(#)?IgnoreRhosts'
      line: 'IgnoreRhosts yes'
    - regexp: '^(#)?PermitEmptyPasswords'
      line: "PermitEmptyPasswords no"
    - regexp: '^(#)?RhostsRSAAuthentication'
      line: "RhostsRSAAuthentication no"
    - regexp: "^(#)?Protocol"
      line: "Protocol 2"
    - regexp: '^(#)?Ciphers'
      line: "Ciphers {{ Ciphers }}"
    - regexp: '^(#)?KexAlgorithms'
      line: "KexAlgorithms {{ KexAlgorithms }}"
    - regexp: '^(#)?MACs'
      line: "MACs {{ MACs }}"
    - regexp: '^(#)?HostKeyAlgorithms'
      line: "HostKeyAlgorithms {{ HostKeyAlgorithms }}"
  notify: restart sshd
