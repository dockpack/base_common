---
- name: Ensure facts can be stored locally
  file:
    path: /etc/ansible/facts.d
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - common

- name: Include variable based on OS version
  # yamllint disable-line rule:line-length
  include_vars: "{{ ansible_os_family }}{{ ansible_distribution_major_version }}.yml"
  tags: always

- name: Install libraries for ansible selinux
  package:
    name: "{{ ansible_libraries }}"
    state: present
  retries: 3
  tags:
    - common

- name: Install server.packages
  when: server.install|bool
  package:
    name: "{{ server.packages }}"
    state: present
  retries: 3
  tags:
    - common

- name: Start ssh daemon
  when: server.install|bool
  systemd:
    name: sshd
    state: started
    enabled: true

- name: RedHat 7 tasks
  block:
    - name: Check presence of portmapper
      stat:
        path: /var/run/rpcbind.sock
      register: portmapper

    - name: Stop portmapper
      systemd:
        name: rpcbind.socket
        state: stopped
        enabled: false
        masked: true
      ignore_errors: true
      when:
        - portmapper.stat.exists

    - name: Disable portmapper
      systemd:
        name: rpcbind.service
        state: stopped
        enabled: false
      ignore_errors: true
      when:
        - portmapper.stat.exists

    - name: Check presence of postfix
      stat:
        path: /var/spool/postfix/pid/master.pid
      register: postfix

    - name: Configure mail transfer agent for local-only mode
      when:
        - postfix.stat.exists
      lineinfile:
        dest: /etc/postfix/main.cf
        regexp: '^inet_interfaces'
        line: 'inet_interfaces = localhost'
        state: present
        mode: 0644
      notify: Restart postfix

    - name: Configure mail transfer agent for mydomain
      when:
        - postfix.stat.exists
        - mydomain is defined
      lineinfile:
        dest: /etc/postfix/main.cf
        regexp: '^mydomain ='
        line: 'mydomain = {{ mydomain }}'
        state: present
        mode: 0644
      notify: Restart postfix

    - name: Configure mail transfer agent for mydomain.mydomain
      when:
        - postfix.stat.exists
        - mydomain is defined
      lineinfile:
        dest: /etc/postfix/main.cf
        regexp: '^myhostname ='
        line: 'myhostname = {{ inventory_hostname }}.{{ mydomain }}'
        state: present
        mode: 0644
      ignore_errors: true
      notify: Restart postfix

    - name: Configure mail transfer agent for smtp
      when:
        - postfix.stat.exists
        - mydomain is defined
      lineinfile:
        dest: /etc/postfix/main.cf
        regexp: '^myorigin = '
        line: 'myorigin = $mydomain'
        state: present
        mode: 0644
      ignore_errors: true
      notify: Restart postfix

    - name: Do not disclose software version in SMTP banner
      when:
        - postfix.stat.exists
      lineinfile:
        path: /etc/postfix/main.cf
        regexp: 'smtpd_banner'
        line: 'smtpd_banner = $myhostname ESMTP'
        state: present
        mode: 0644
      notify: Restart postfix

    - name: Configure mail transfer agent for ipv4 only
      when:
        - postfix.stat.exists
      lineinfile:
        dest: /etc/postfix/main.cf
        regexp: '^inet_protocols'
        line: 'inet_protocols = ipv4'
        state: present
        mode: 0644
      ignore_errors: true
      notify: Restart postfix

    - name: Remove rsh trust files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/hosts.equiv
        - /root/hosts.equiv

    - name: Manage kernel modules
      copy:
        src: modprobe.conf
        dest: /etc/modprobe.d/CIS.conf
        owner: root
        group: root
        mode: 0644

    - name: Check presence of sysconfig network file
      stat:
        path: /etc/sysconfig/network
      register: sysconfig

    - name: Disable zeroconf networking
      when: sysconfig.stat.exists
      lineinfile:
        dest: /etc/sysconfig/network
        regexp: '^NOZEROCONF'
        line: 'NOZEROCONF=yes'
        state: present
        mode: 0644

    - name: Check presence of dmesg logfile
      stat:
        path: /var/log/dmesg
      register: dmesg_logfile

    - name: Restrict permissions on dmesg logfile
      when: dmesg_logfile.stat.exists
      file:
        path: /var/log/dmesg
        mode: 0640
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version == "7"

- name: Check presence of sshd_config file
  stat:
    path: /etc/ssh/sshd_config
  register: sshd_config

- name: SSH server configuration
  when: sshd_config.stat.exists
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    mode: 0600
  with_items:
    - regexp: '^(#)?HostbasedAuthentication'
      line: "HostbasedAuthentication no"
    - regexp: '^(#)?IgnoreRhosts'
      line: 'IgnoreRhosts yes'
    - regexp: '^(#)?PermitEmptyPasswords'
      line: "PermitEmptyPasswords no"
    - regexp: '^(#)?RhostsRSAAuthentication'
      line: ''
    - regexp: "^(#)?Protocol"
      line: "Protocol 2"
    - regexp: '^(#)?Ciphers'
      line: "Ciphers {{ Ciphers }}"
    - regexp: '^(#)?KexAlgorithms'
      line: "KexAlgorithms {{ KexAlgorithms }}"
    - regexp: '^(#)?MACs'
      line: "MACs {{ MACs }}"
    - regexp: '^(#)?HostKeyAlgorithms'
      line: "HostKeyAlgorithms {{ HostKeyAlgorithms }}"
    - regexp: '^(#)?HostKey /etc/ssh/ssh_host_rsa_key'
      line: '# HostKey /etc/ssh/ssh_host_rsa_key'
    - regexp: '^(#)?HostKey /etc/ssh/ssh_host_dsa_key'
      line: '# HostKey /etc/ssh/ssh_host_dsa_key'
    - regexp: '^(#)?HostKey /etc/ssh/ssh_host_ecdsa_key'
      line: '# HostKey /etc/ssh/ssh_host_ecdsa_key'
  notify: Restart sshd

- name: Check if /etc/ssh/moduli contains weak Diffie-Hellman parameters
  when: sshd_config.stat.exists|bool
  shell: awk '$5 < 2048' /etc/ssh/moduli
  register: sshd_register_moduli
  no_log: true
  changed_when: false
  check_mode: false

- name: Deactivate short Diffie-Hellman moduli
  when:
    - sshd_config.stat.exists
    - sshd_register_moduli.stdout
  # yamllint disable-line rule:line-length
  shell: "awk '$5 >= 2048' /etc/ssh/moduli > /etc/ssh/moduli.tmp && mv -f /etc/ssh/moduli.tmp /etc/ssh/moduli"

- name: Check the ed25519 host key
  when: sshd_config.stat.exists
  stat:
    path: /etc/ssh/ssh_host_ed25519_key
  register: ed25519

- name: Generate ed25519 host key
  command: ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""
  when:
    - sshd_config.stat.exists|bool
    - not ed25519.stat.exists|bool
  notify: Restart sshd
  changed_when: true

- name: Configure ed25519 host key
  when: sshd_config.stat.exists
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^HostKey /etc/ssh/ssh_host_ed25519_key'
    line: 'HostKey /etc/ssh/ssh_host_ed25519_key'
    insertbefore: '^# HostKey /etc/ssh/ssh_host_rsa_key'
    state: present
  notify: Restart sshd

- name: Disable weak host keys
  include_tasks: weak_keys.yml
  loop: "{{ weak_host_keys }}"
  loop_control:
    loop_var: the_key
...
